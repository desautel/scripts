#!/usr/bin/perl -w
# -*- perl -*-

=head1 NAME

snmp__atenpdu_total - Munin plugin to monitor total usage of ATEN PN* PDU

=head1 CONFIGURATION

The following configuration variables are used

 host      - SNMP host to contact (default taken from link name)
 port      - SNMP port to use (default 161)
 community - SNMP community string to use (default "public")

=head1 LICENSE

MPL/GPL

=cut

use strict;
use Munin::Plugin::SNMP;

# oid
my $oidPart  = '1.3.6.1.4.1.21317.1.3.2.30.2.1.1.0';
my $oidTotal = '1.3.6.1.4.1.21317.1.3.2.30.2.1.3.1.';

if (defined $ARGV[0] and $ARGV[0] eq "snmpconf")
{
    print "require $oidPart\n";
    print "require $oidTotal [2-5]\n";
    exit 0;
}

my $session = Munin::Plugin::SNMP->session();
my $partid = $session->get_single($oidPart);

if (defined $ARGV[0] and $ARGV[0] eq "config")
{
    my ($host) = Munin::Plugin::SNMP->config_session();
    print "host_name $host\n";
    print "graph_title PDU $partid total usage\n";
    print "graph_category system\n";
    print "graph_vlabel Value\n";
    print "graph_info Total power usage\n";
	print "graph_args --base 1000 -l 0\n";

    print "amp.label Ampere [A]\n";
    print "vol.label Line voltage [V]\n";
    print "watt.label Line load [W]\n";
    print "wh.label Line volume [kWh]\n";

    print "wh.draw AREA\n";
   
    exit 0;
}

my $oval;
my %hoid = ( 2 => 'amp', 3 => 'vol', 4 => 'watt', 5 => 'wh' );

foreach (keys %hoid) {
    $oval = &get_single($session, $oidTotal . $_ . '.1');
    if (defined($oval)) {$oval = &get_numeric($oval) || 'U'; }
    else {$oval = 'U'; }
    print "$hoid{$_}.value $oval\n";
}


sub get_numeric {
    my ($val) = @_;
    if ($val =~ /^([0-9\.]+)/) {return $1; }
    return undef;
}

sub get_single {
    my ($session, $oid) = @_;
    my $res = $session->get_request($oid);
    my $val = undef;
    if ($session->error_status) {return undef; }
    # treat only if value returned, unless not touch $val
    if (defined($res->{$oid})) {
        if ($res->{$oid} ne 'noSuchObject') {$val = $res->{$oid}; }
    } elsif (defined($res->{$oid . '.0'})) {
        if ($res->{$oid . '.0'} ne 'noSuchObject') {$val = $res->{$oid . '.0'}; }
    } else {
    }
    return $val;
}

